import { prisma } from '~/db';
import { Outlet, useLoaderData } from "@remix-run/react";
import { Col, Row } from "react-bootstrap";
import categories from'~/data/categories'


export const loader = async({params}) => {

/*let data = {}
data.cat = categories.find((category) => category.listName === params.categoryId);
if (params.subCategoryId) { 
  console.log('13', params.subCategoryId, '=>', params.subCategoryId.toLowerCase())
  if (data.cat.content.find((product) => product.id === params.subCategoryId.toLowerCase())) {
    data.product = data.cat.content.find((product) => product.id === params.subCategoryId.toLowerCase());
    data.subCat = 'none';
  } else if (categories.find((category) => category.subCategories.find((subCategory) => subCategory.listName === params.subCategoryId.toLowerCase()))) {
    data.subCat = params.subCategoryId
}} else {
  data.subCat = 'none';
  data.product =  data.cat.content[0];
}
console.log([...data])*/


const data = {};
data.params = params
data.products = await prisma.products.findMany({
  where: {
    category: params.categoryId,
    published: true
  },
})

return(data)
}

export default function () {
  const data = useLoaderData();
    return (
      <div style={{ fontFamily: "system-ui, sans-serif", lineHeight: "1.4" }}>
        {data.params.categoryId}
        {data.params.subCategoryId}
        {data.params.productId}
        <h1>
    {data.products[0].title}
        </h1>
        {data.products[0].content}
        v Outlet v @catalog/$categoryId<br/>
      </div>
    );
  }


  const CategoryText = (props) => {
    const data = {};
    if (props.data.subcategory !== 'none') {
      data.category = props.data.subcategory
    } else {
      data.category = props.data.category
    }
    if (props.data.product !== 'none') {
      data.product = props.data.product.title
    } else {
      data.product = props.data.category.content[0].title
    }
    return(<Row>      //<CategoryText data={data}/>//   <Col md='3'>{data.category}</Col><Col md='3'>{data.product}</Col></Row>)
  }